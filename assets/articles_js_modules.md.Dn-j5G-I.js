import{_ as e,c as o,o as t,a2 as a}from"./chunks/framework.BPg1USI6.js";const h=JSON.parse('{"title":"模块化","description":"","frontmatter":{},"headers":[],"relativePath":"articles/js/modules.md","filePath":"articles/js/modules.md","lastUpdated":1709538010000}'),s={name:"articles/js/modules.md"},r=a('<h1 id="模块化" tabindex="-1">模块化 <a class="header-anchor" href="#模块化" aria-label="Permalink to &quot;模块化&quot;">​</a></h1><h2 id="commonjs规范" tabindex="-1">CommonJS规范 <a class="header-anchor" href="#commonjs规范" aria-label="Permalink to &quot;CommonJS规范&quot;">​</a></h2><p>CommonJS规范加载模块是同步的，只有加载完成，才能执行后面的操作。</p><p>CommonJS规范中的module、exports和require</p><ul><li><p>每个文件就是一个模块，有自己的作用域。每个模块内部，module变量代表当前模块，是一个对象，它的exports属性（即module.exports）是对外的接口。</p></li><li><p>module.exports属性表示当前模块对外输出的接口，其他文件加载该模块，实际上就是读取module.exports变量。</p></li><li><p>为了方便，Node为每个模块提供一个exports变量，指向module.exports。</p></li><li><p>require命令用于加载模块文件。</p></li></ul>',5),l=[r];function i(m,d,p,n,c,_){return t(),o("div",null,l)}const x=e(s,[["render",i]]);export{h as __pageData,x as default};
